spring.application.name=markets
#spring.ai.openai.api-key=${OPENAI_API_KEY}
#spring.ai.openai.chat.options.model=gpt-4o

#spring.ai.vectorstore.pgvector.initialize-schema=true

# Suppress WARN logs from FileSystemFontProvider
logging.level.org.apache.pdfbox.pdmodel.font.FileSystemFontProvider=ERROR

#spring.docker.compose.lifecycle-management=start_only



#spring.ai.chat.client.enabled=true

# OpenAI properties
#spring.ai.openai.base-url=${NVIDIA_URL}
#spring.ai.openai.api-key=${NVIDIA_API_KEY}
#spring.ai.openai.chat.options.model=llama-3.1-nemotron-70b-instruct
#spring.ai.openai.chat.options.maxTokens=2048

#spring.main.allow-bean-definition-overriding=true


#open-ai
#spring.ai.openai.api-key=${OPENAI_API_KEY}
#spring.ai.openai.chat.options.model=gpt-4o

#ollama properties
#spring.ai.ollama.embedding.enabled=true
#spring.ai.ollama.embedding.model=phi3
#spring.ai.ollama.init.pull-model-strategy=always
#spring.ai.ollama.init.timeout=10m
#
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.ai.vectorstore.pgvector.table-name=law
#spring.datasource.driver-class-name=org.postgresql.Driver

# Chroma Vector Store connection properties
#spring.ai.vectorstore.chroma.client.host=localhost
#spring.ai.vectorstore.chroma.client.port=8000
#spring.ai.vectorstore.pgvector
#spring.ai.vectorstore.chroma.client.key-token=<your access token (if configure)>
#spring.ai.vectorstore.chroma.client.username=<your username (if configure)>
#spring.ai.vectorstore.chroma.client.password=<your password (if configure)>

# Chroma Vector Store collection properties
#spring.ai.vectorstore.chroma.initialize-schema=true
#spring.ai.vectorstore.chroma.collection-name=SpringAiCollection
#spring.ai.vectorstore.chroma.

#spring.ai.vectorstore.pgvector.dimensions=1536


#
###pinecone
spring.ai.vectorstore.pinecone.apiKey=${PINECONE_API_KEY}
spring.ai.vectorstore.pinecone.project-id=d77ntz2
spring.ai.vectorstore.pinecone.environment=aped-4627-b74a
spring.ai.vectorstore.pinecone.index-name=${PINECONE_INDEX_NAME}
##

#chat-ZhiPuAI
spring.ai.zhipuai.chat.base-url=https://open.bigmodel.cn/api/paas
spring.ai.zhipuai.chat.enabled=true
spring.ai.zhipuai.chat.options.max-tokens=10000
spring.ai.zhipuai.chat.options.temperature=0.7
spring.ai.zhipuai.chat.options.top-p=0.8
#

#embedding-ZhiPuAI
spring.ai.zhipuai.embedding.base-url=https://open.bigmodel.cn/api/paas
spring.ai.zhipuai.embedding.enabled=true
spring.ai.zhipuai.api-key=${ZHIPUAI_API_KEY}
#

spring.ai.vectorstore.pinecone.server-side-timeout=100000
spring.ai.retry.max-attempts=3